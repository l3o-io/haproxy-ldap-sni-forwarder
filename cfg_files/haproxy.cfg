#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    #log         127.0.0.1 local2
    #log         rsyslog:514 local2

    # unecessary since already in a container and runs w/ a non-root user
    # chroot      /var/lib/haproxy
    # user        haproxy
    # group       haproxy
    # daemon

    pidfile     /var/lib/haproxy/haproxy.pid
    maxconn     4000

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats
    # turn on stats ipv4 socket
    stats socket ipv4@0.0.0.0:9999

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    tcp
    log                     global
    option                  tcplog
    option                  logasap
    option                  redispatch
    retries                 3
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout check           10s
    maxconn                 3000
    default-server          init-addr last,libc,none

#---------------------------------------------------------------------
# stats frontend
#---------------------------------------------------------------------
frontend stats
    bind *:8404
    mode http

    stats enable
    stats uri /stats
    stats refresh 10s
    stats admin if LOCALHOST
    #stats admin if TRUE
    option dontlog-normal

#---------------------------------------------------------------------
# dns resolver for automatic service discovery
# necessary for dynamic host name lookup in tcp2be.map
# (otherwise haproxy resolves hostnames just on startup)
# TODO: adjust this depending on your network configuration - CNI
#---------------------------------------------------------------------
resolvers dns
    nameserver dns1 10.88.2.1:53

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend main
    bind *:3389
    
    tcp-request content set-var(sess.src) src
    tcp-request content set-var(sess.src_port) src_port
    tcp-request content set-var(sess.src_ip_tmp) str(),concat(,sess.src,:)
    tcp-request content set-var(sess.src_ip_port) str(),concat(,sess.src,:),concat(,sess.src_port)
    # tcp to backend map lookup: /etc/haproxy/tcp2be.map
    # src.ip:port  backend
    use_backend %[var(sess.src),concat(:,sess.src_port),lower,map_str(/etc/haproxy/tcp2be.map)] if { var(sess.src),concat(:,sess.src_port),lower,map_str(/etc/haproxy/tcp2be.map) -m found }

#---------------------------------------------------------------------
# routing based on SNI to the various backends
#---------------------------------------------------------------------
backend ldap 
    server     ldap1 389ds:3389 #weight 0

backend ldap2
    server     ldap2 389ds2:3389 #weight 0